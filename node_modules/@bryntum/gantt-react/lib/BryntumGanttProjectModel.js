import React from 'react';
import { ProjectModel } from '@bryntum/gantt';
import { createWidget, shouldComponentUpdate, processWidgetContent } from './WrapperHelper.js';
export class BryntumGanttProjectModel extends React.Component {
    constructor() {
        super(...arguments);
        this.processWidgetContent = processWidgetContent;
        this.dataStores = {
            'assignmentStore': 'assignments',
            'calendarManagerStore': 'calendars',
            'dependencyStore': 'dependencies',
            'eventStore': 'events',
            'resourceStore': 'resources',
            'taskStore': 'tasks',
            'timeRangeStore': 'timeRanges'
        };
    }
    componentDidMount() {
        this.instance = createWidget(this);
    }
    componentWillUnmount() {
        var _a, _b;
        (_b = (_a = this.instance) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a);
    }
    shouldComponentUpdate(nextProps, nextState) {
        return shouldComponentUpdate(this, nextProps, nextState);
    }
    render() {
        return null;
    }
}
BryntumGanttProjectModel.instanceClass = ProjectModel;
BryntumGanttProjectModel.instanceName = 'ProjectModel';
BryntumGanttProjectModel.configNames = [
    'adjustDurationToDST',
    'assignmentModelClass',
    'assignmentsData',
    'assignmentStoreClass',
    'autoLoad',
    'autoSetConstraints',
    'autoSync',
    'autoSyncTimeout',
    'bubbleEvents',
    'calendarManagerStoreClass',
    'calendarModelClass',
    'calendarsData',
    'callOnFunctions',
    'children',
    'delayCalculation',
    'dependenciesData',
    'dependencyModelClass',
    'dependencyStoreClass',
    'encoder',
    'eventsData',
    'expanded',
    'includeAsapAlapAsConstraints',
    'includeChildrenInRemoveRequest',
    'listeners',
    'maxCalendarRange',
    'orderedParentIndex',
    'parentId',
    'parentIndex',
    'phantomIdField',
    'phantomParentIdField',
    'resetIdsBeforeSync',
    'resetUndoRedoQueuesAfterLoad',
    'resourceModelClass',
    'resourcesData',
    'resourceStoreClass',
    'silenceInitialCommit',
    'skipSuccessProperty',
    'storeIdProperty',
    'supportShortSyncResponse',
    'taskModelClass',
    'tasksData',
    'taskStoreClass',
    'timeRangesData',
    'toJSONResultFormat',
    'trackResponseType',
    'transport',
    'useRawData',
    'validateResponse',
    'writeAllFields'
];
BryntumGanttProjectModel.propertyConfigNames = [
    'addConstraintOnDateSet',
    'assignments',
    'assignmentStore',
    'autoCalculatePercentDoneForParentTasks',
    'autoMergeAdjacentSegments',
    'calendar',
    'calendarManagerStore',
    'calendars',
    'crudStores',
    'daysPerMonth',
    'daysPerWeek',
    'dependencies',
    'dependenciesCalendar',
    'dependencyStore',
    'direction',
    'enableProgressNotifications',
    'endDate',
    'eventStore',
    'forceSync',
    'hoursPerDay',
    'id',
    'ignoreRemoteChangesInSTM',
    'json',
    'lazyLoad',
    'loadUrl',
    'onBeforeDestroy',
    'onBeforeLoad',
    'onBeforeLoadApply',
    'onBeforeResponseApply',
    'onBeforeSend',
    'onBeforeSync',
    'onBeforeSyncApply',
    'onCatchAll',
    'onChange',
    'onCycle',
    'onDataReady',
    'onDestroy',
    'onEmptyCalendar',
    'onHasChanges',
    'onLoad',
    'onLoadCanceled',
    'onLoadFail',
    'onNoChanges',
    'onProgress',
    'onRequestDone',
    'onRequestFail',
    'onRevisionNotification',
    'onSchedulingConflict',
    'onSync',
    'onSyncCanceled',
    'onSyncDelayed',
    'onSyncFail',
    'readOnly',
    'remoteChildCount',
    'resources',
    'resourceStore',
    'shouldSyncDataOnLoad',
    'skipNonWorkingTimeWhenSchedulingManually',
    'startDate',
    'startedTaskScheduling',
    'statusDate',
    'stm',
    'syncApplySequence',
    'syncUrl',
    'tasks',
    'taskStore',
    'timeRanges',
    'timeRangeStore',
    'timeZone',
    'trackProjectModelChanges'
];
BryntumGanttProjectModel.propertyNames = [
    'allChildren',
    'criticalPaths',
    'descendantCount',
    'hasGeneratedId',
    'inlineData',
    'internalId',
    'isCommitting',
    'isCreating',
    'isValid',
    'previousSiblingsTotalCount',
    'visibleDescendantCount'
];
//# sourceMappingURL=BryntumGanttProjectModel.js.map